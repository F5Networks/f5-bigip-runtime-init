controls:
  logLevel: info
  logFilename: /var/log/cloud/bigIpRuntimeInit.log
pre_onboard_enabled: []
runtime_parameters:
  - name: HOST_NAME
    type: url
    value: http://169.254.169.254/computeMetadata/v1/instance/hostname
    headers:
      - name: Metadata-Flavor
        value: Google
  - name: PROJECT_ID
    type: url
    value: http://169.254.169.254/computeMetadata/v1/project/project-id
    headers:
      - name: Metadata-Flavor
        value: Google
  - name: REGION
    type: url
    value: 'http://metadata.google.internal/computeMetadata/v1/instance/attributes/region'
    headers:
      - name: Metadata-Flavor
        value: Google
  - name: UNIQUE_STRING
    type: url
    value: 'http://metadata.google.internal/computeMetadata/v1/instance/attributes/unique-string'
    headers:
      - name: Metadata-Flavor
        value: Google
  - name: INSTANCE_ID
    type: url
    value: http://169.254.169.254/computeMetadata/v1/instance/id
    headers:
      - name: Metadata-Flavor
        value: Google
  - name: BIGIQ_PASSWORD
    type: secret
    secretProvider:
      type: SecretsManager
      environment: gcp
      version: latest
      secretId: mySecretId
bigip_ready_enabled: []
extension_packages:
  install_operations:
    - extensionType: do
      extensionVersion: 1.43.0
      extensionHash: 394f6d97219d016e90016874acb09bd27f7907fda4f1730dea0276900b753a1d
    - extensionType: as3
      extensionVersion: 3.50.2
      extensionHash: 620f441bebfdce0261045e34bc7c34f2793b05c0aca62c7ec8e22bbb3f4f35c3
    - extensionType: ts
      extensionVersion: 1.35.0
      extensionHash: 839698d98a8651a90b3d509cde4b382338461a253878c9fd00c894699ef0e844
extension_services:
  service_operations:
    - extensionType: do
      type: inline
      value:
        schemaVersion: 1.0.0
        class: Device
        label: >-
          Autoscale 1NIC BIG-IP declaration for Declarative Onboarding with BIG-IQ
          license
        async: true
        Common:
          class: Tenant
          My_DbVariables:
            class: DbVariables
            ui.advisory.color: blue
            ui.advisory.text: "Provisioned via Runtime Init and DO"
          My_Dns:
            class: DNS
            nameServers:
              - 169.254.169.254
          My_License:
            class: License
            hypervisor: gce
            licenseType: licensePool
            licensePool: clpv2
            bigIqHost: 192.168.1.4
            bigIqUsername: admin
            bigIqPassword: '{{{BIGIQ_PASSWORD}}}'
            tenant: 'myTenant-{{{INSTANCE_ID}}}'
            skuKeyword1: F5-BIG-MSP-BT-1G
            unitOfMeasure: hourly
            reachable: false
            overwrite: false
          My_Ntp:
            class: NTP
            servers:
              - 0.pool.ntp.org
            timezone: UTC
          My_Provisioning:
            asm: nominal
            class: Provision
            ltm: nominal
          My_System:
            class: System
            autoPhonehome: true
            hostname: '{{{HOST_NAME}}}'
    - extensionType: as3
      type: inline
      value:
        schemaVersion: 3.0.0
        class: ADC
        remark: Autoscale
        label: Autoscale
        Tenant_1:
          class: Tenant
          Shared:
            class: Application
            template: shared
            telemetry_local_rule:
              remark: Only required when TS is a local listener
              class: iRule
              iRule: |-
                when CLIENT_ACCEPTED {
                  node 127.0.0.1 6514
                }
            telemetry_local:
              remark: Only required when TS is a local listener
              class: Service_TCP
              virtualAddresses:
                - 255.255.255.254
              virtualPort: 6514
              iRules:
                - telemetry_local_rule
            telemetry:
              class: Pool
              members:
                - enable: true
                  serverAddresses:
                    - 255.255.255.254
                  servicePort: 6514
              monitors:
                - bigip: "/Common/tcp"
            telemetry_hsl:
              class: Log_Destination
              type: remote-high-speed-log
              protocol: tcp
              pool:
                use: telemetry
            telemetry_formatted:
              class: Log_Destination
              type: splunk
              forwardTo:
                use: telemetry_hsl
            telemetry_publisher:
              class: Log_Publisher
              destinations:
                - use: telemetry_formatted
            telemetry_asm_security_log_profile:
              class: Security_Log_Profile
              application:
                localStorage: false
                remoteStorage: splunk
                servers:
                  - address: 255.255.255.254
                    port: '6514'
                storageFilter:
                  requestType: all
            Shared_Pool:
              class: Pool
              remark: Service 1 shared pool
              members:
                - addressDiscovery: gce
                  addressRealm: private
                  tagKey: appautoscalegroup
                  tagValue: '{{{UNIQUE_STRING}}}'
                  region: '{{{REGION}}}'
                  servicePort: 80
                  updateInterval: 60
              monitors:
                - http
            Custom_HTTP_Profile:
              class: HTTP_Profile
              xForwardedFor: true
            Custom_WAF_Policy:
              class: WAF_Policy
              url: >-
                https://raw.githubusercontent.com/F5Networks/f5-google-gdm-templates-v2/v2.1.0.0/examples/autoscale/bigip-configurations/Rapid_Deployment_Policy_13_1.xml
              enforcementMode: blocking
              ignoreChanges: false
          HTTP_Service:
            class: Application
            template: http
            serviceMain:
              class: Service_HTTP
              virtualAddresses:
                - 0.0.0.0
              pool: /Tenant_1/Shared/Shared_Pool
              profileHTTP:
                use: /Tenant_1/Shared/Custom_HTTP_Profile
              policyWAF:
                use: /Tenant_1/Shared/Custom_WAF_Policy
              securityLogProfiles:
                - use: /Tenant_1/Shared/telemetry_asm_security_log_profile
          HTTPS_Service:
            class: Application
            template: https
            serviceMain:
              class: Service_HTTPS
              virtualAddresses:
                - 0.0.0.0
              profileHTTP:
                use: /Tenant_1/Shared/Custom_HTTP_Profile
              policyWAF:
                use: /Tenant_1/Shared/Custom_WAF_Policy
              pool: /Tenant_1/Shared/Shared_Pool
              securityLogProfiles:
                - use: /Tenant_1/Shared/telemetry_asm_security_log_profile
              serverTLS:
                bigip: /Common/clientssl
              redirect80: false
    - extensionType: ts
      type: inline
      value:
        class: Telemetry
        Controls:
          class: Controls
          logLevel: debug
        Google_Cloud_Monitoring_Namespace:
          class: Telemetry_Namespace
          My_System_Poller:
            class: Telemetry_System_Poller
            interval: 60
          My_Consumer:
            class: Telemetry_Consumer
            type: Google_Cloud_Monitoring
            projectId: '{{{PROJECT_ID}}}'
            serviceEmail: '{{{UNIQUE_STRING}}}-admin@{{{PROJECT_ID}}}.iam.gserviceaccount.com'
            reportInstanceMetadata: false
            useServiceAccountToken: true
        My_Remote_Logs_Namespace:
          class: Telemetry_Namespace
          My_Listener:
            class: Telemetry_Listener
            port: 6514
          My_Google_Cloud_Logs:
            class: Telemetry_Consumer
            type: Google_Cloud_Logging
            logScope: projects
            logScopeId: '{{{PROJECT_ID}}}'
            logId: f5-waf-logs
            serviceEmail: '{{{UNIQUE_STRING}}}-admin@{{{PROJECT_ID}}}.iam.gserviceaccount.com'
            useServiceAccountToken: true
post_onboard_enabled: []
